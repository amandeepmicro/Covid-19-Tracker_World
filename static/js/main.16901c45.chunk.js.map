{"version":3,"sources":["components/Navbar.js","components/Dashboard/InfoBox.js","components/Dashboard/Map.js","components/Dashboard/Table.js","components/Dashboard/LineGraph.js","components/Progress.js","utils/util.js","components/Dashboard.js","components/News/News.js","components/Precautions/Precautions.js","components/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","id","className","fontSize","style","color","to","activeClassName","InfoBox","title","cases","total","active","props","activate","Tooltip","Card","onClick","CardContent","Typography","variant","isFinite","end","duration","separator","CreateMap","countries","casesType","center","zoom","casesTypeColors","countryInfo","hex","rgb","half_op","multiplier","recovered","deaths","TileLayer","url","attribution","accessToken","map","country","index","Circle","key","lat","long","fillOpacity","fillColor","radius","Math","sqrt","onclick","e","target","openPopup","Popup","backgroundColor","backgroundImage","flag","numeral","format","Table","useState","data","setData","sortC","setSortC","sortR","setSortR","sortD","setSortD","activeArrow","useEffect","handleClick","num","type","field","sortedData","sort","a","b","sortByDescending","sortDataDescd","sortByAscending","sortDataAscend","TableSortLabel","direction","slice","str","width","src","alt","iso3","length","substring","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","time","parser","tooltipFormate","yAxes","gridLines","ticks","values","LineGraph","selectedCountry","graphColor","countryName","colorsObj","blue","borderColor","green","red","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","fetch","then","response","status","console","log","document","querySelector","textContent","Error","json","timeline","catch","err","fetchData","margin","datasets","toLocaleUpperCase","Progress","text","$progress","$","$bar","$text","percent","speed","stopper","parseInt","totalNum","typeNum","ceil","setTimeout","addClass","update","clearTimeout","find","css","removeClass","sortData","prettyPrintStat","stat","useStyles","makeStyles","theme","formControl","spacing","minWidth","textAlign","alignItems","selectEmpty","marginTop","Dashboard","setCountries","setSelectedCountry","setCountryInfo","setCountryName","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","setGraphColor","colors","classes","getWorldwideData","getCountriesData","countriesName","name","iso2","onCountryChange","countryCode","FormControl","NativeSelect","onChange","inputProps","FormHelperText","todayCases","todayRecovered","todayDeaths","root","flexWrap","justifyContent","overflow","icon","search","position","marginLeft","paddingBottom","breakpoints","up","searchIcon","padding","height","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","News","term","setTerm","debouncedTerm","setDebouncedTerm","spinner","setSpinner","heading","setHeading","timerId","newsData","articles","description","publishedAt","source","image","img","fetchNews","viewBox","ng-attr-d","ng-attr-fill","stroke","d","fill","transform","attributeName","calcMode","keyTimes","dur","begin","repeatCount","Grid","item","xs","cols","marginBottom","GridList","cellHeight","GridListTile","InputBase","placeholder","handleOnChange","input","GridListTileBar","tileBar","subtitle","actionIcon","IconButton","window","open","aria-label","AutoPlaySwipeableViews","autoPlay","SwipeableViews","tutorialSteps","imgPath","Accordion","withStyles","border","boxShadow","borderBottom","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","Precautions","React","setExpanded","useTheme","activeStep","setActiveStep","maxSteps","maxWidth","flexGrow","header","palette","background","default","handleChange","panel","event","newExpanded","Fragment","Container","container","justify","Paper","square","elevation","axis","onChangeIndex","step","enableMouseEvents","abs","MobileStepper","steps","nextButton","Button","size","prevActiveStep","disabled","backButton","gutterBottom","expandIcon","aria-controls","media","Contact","sm","CardActionArea","CardMedia","component","BASENAME","URL","process","pathname","App","basename","exact","path","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.16901c45.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\n\nimport \"../css/Navbar.css\";\n\nexport default function Navbar() {\n  return (\n    <div>\n      <nav id=\"navbar\">\n        <h1 className=\"logo\">\n          <span className=\"text-primary\">Covid</span>\n          <TrendingUpIcon\n            fontSize=\"large\"\n            style={{ color: \"#00b217\" }}\n          />\n          <span style={{ color: \"#c80414\" }}>Tracker</span>\n        </h1>\n        <ul>\n          <li>\n            <NavLink\n              to=\"/dashboard\"\n              activeClassName=\"selected\"\n            >\n              {\" \"}\n              Dashboard{\" \"}\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/news\"\n              activeClassName=\"selected\"\n            >\n              News\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/precautions\"\n              activeClassName=\"selected\"\n            >\n              {\" \"}\n              Precautions{\" \"}\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/usefulLinks\"\n              activeClassName=\"selected\"\n            >\n              Useful Links\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n","//rfce is shortcut to buid boilerplate\nimport React from \"react\";\nimport CountUp from \"react-countup\";\n\nimport { Card, CardContent, Typography, Tooltip } from \"@material-ui/core\";\n\nimport \"../../css/Dashboard/InfoBox.css\";\nfunction InfoBox({ title, cases, total, active, ...props }) {\n  const activate = active ? `isActive--${props.color}` : \"\";\n  function handleClick() {\n    props.onClick();\n  }\n  return (\n    <Tooltip title=\"Click to see Changes\">\n      <Card\n        className={`infoBox infoBox--${props.color} isHighlighted--${props.color}  ${activate}`}\n        onClick={handleClick}\n      >\n        <CardContent>\n          {/* title */}\n          <Typography\n            variant=\"h6\"\n            className=\"infoTitle\"\n          >\n            {title}\n          </Typography>\n          {/* no.of cases */}\n          <h2 className=\"infoBox_cases\">{cases}</h2>\n\n          {/* total no. cases */}\n          <Typography className=\"infoBox_total\">\n            <span className=\"infoTotalspan\">Total:</span>{\" \"}\n            {isFinite(total) ? (\n              <CountUp\n                end={total}\n                duration={4}\n                separator={\",\"}\n              ></CountUp>\n            ) : (\n              0\n            )}\n            {/* {numeral(total).format(\"0,0\")}              */}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Tooltip>\n  );\n}\n\nexport default InfoBox;\n","import React from \"react\";\nimport \"../../css/Dashboard/Map.css\";\nimport { Map, TileLayer, Circle, Popup } from \"react-leaflet\";\nimport numeral from \"numeral\";\nfunction CreateMap({ countries, casesType = \"cases\", center, zoom, countryInfo }) {\n  const casesTypeColors = {\n    cases: {\n      hex: \"#08538c\",\n      rgb: \"rgb(204,16,52)\",\n      half_op: \"rgba(204,16,52,0.5)\",\n      multiplier: 600,\n    },\n    recovered: {\n      hex: \"#7dd71d\",\n      rgb: \"rgb(125,215,29)\",\n      half_op: \"rgba(125,215,29,0.5)\",\n      multiplier: 1100,\n    },\n    deaths: {\n      hex: \"#CC1034\",\n      rgb: \"rgb(251,68,67)\",\n      half_op: \"rgba(251,68,67,0.5)\",\n      multiplier: 3000,\n    },\n  };\n\n  return (\n    <div className=\"map\">\n      <Map\n        center={center}\n        zoom={zoom}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.jawg.io/jawg-dark/{z}/{x}/{y}{r}.png?access-token={accessToken}\"\n          attribution='<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\" target=\"_blank\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          accessToken=\"x1ygxQd0Y4VqHRYviKLGoL8dlqWfXm23j16emIMeZt2qrPW8T7RNEn7lroHW1m1T\"\n        />\n        {/* function to loop and draw circles */}\n\n        {countries.map((country, index) => (\n          <Circle\n            className=\"circles\"\n            key={index}\n            center={[country.countryInfo.lat, country.countryInfo.long]}\n            fillOpacity={0.4}\n            color={casesTypeColors[casesType].hex}\n            fillColor={casesTypeColors[casesType].hex}\n            radius={Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier}\n            onclick={(e) => {\n              e.target.openPopup();\n            }}\n          >\n            <Popup style={{ backgroundColor: \"rgba(0, 0, 0, 0.829)\" }}>\n              <div className=\"info-container\">\n                <div\n                  className=\"info-flag\"\n                  style={{\n                    backgroundImage: `url(${country.countryInfo.flag})`,\n                  }}\n                ></div>\n                <div className=\"info-name\">{country.country}</div>\n                <div className=\"info-confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\n                <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n                <div className=\"info-deaths\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\n              </div>\n            </Popup>\n          </Circle>\n        ))}\n      </Map>\n    </div>\n  );\n}\n\nexport default CreateMap;\n","import React, { useState, useEffect } from \"react\";\nimport numeral from \"numeral\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nimport \"../../css/Dashboard/Table1.css\";\n\nfunction Table(props) {\n  //we are getting data already sorted in descending order\n  const [data, setData] = useState([]);\n  const [sortC, setSortC] = useState(\"desc\");\n  const [sortR, setSortR] = useState(\"desc\");\n  const [sortD, setSortD] = useState(\"desc\");\n  const [activeArrow] = useState(false);\n  //console.log(sortC,sortR,sortD)\n\n  //console.log(data)\n  useEffect(() => {\n    //console.log('table rerendered')\n    setData(props.countries);\n  }, [props.countries]);\n\n  function sortByAscending(field) {\n    return function (a, b) {\n      if (a[field] > b[field]) {\n        return -1;\n      } else if (a[field] < b[field]) {\n        return 1;\n      }\n      return 0;\n    };\n  }\n  function sortByDescending(field) {\n    return function (a, b) {\n      if (a[field] > b[field]) {\n        return 1;\n      } else if (a[field] < b[field]) {\n        return -1;\n      }\n      return 0;\n    };\n  }\n  const sortDataDescd = (data, field) => {\n    //console.log('descend',data, field)\n    if (field === \"cases\") {\n      setSortC(\"asc\");\n    } else if (field === \"recovered\") {\n      setSortR(\"asc\");\n    } else {\n      setSortD(\"asc\");\n    }\n\n    const sortedData = [...data];\n\n    //sortedData.sort((a,b)=> a.cases>b.cases?-1:1)\n    sortedData.sort(sortByDescending(field));\n    //console.log(sortedData)\n    setData(sortedData);\n  };\n  const sortDataAscend = (data, field) => {\n    if (field === \"cases\") {\n      setSortC(\"desc\");\n    } else if (field === \"recovered\") {\n      setSortR(\"desc\");\n    } else {\n      setSortD(\"desc\");\n    }\n    //console.log('ascend' , data, field)\n    const sortedData = [...data];\n\n    //sortedData.sort((a,b)=> a.cases>b.cases?-1:1)\n    sortedData.sort(sortByAscending(field));\n    //console.log(sortedData)\n    setData(sortedData);\n  };\n\n  function ellipsify(str) {\n    if (str.length > 8) {\n      return str.substring(0, 8) + \"...\";\n    } else {\n      return str;\n    }\n  }\n\n  const handleClick = (num, type) => {\n    if (num === \"desc\") {\n      sortDataDescd(data, type);\n      // setActiveArrow(!activeArrow)\n      // console.log(activeArrow)\n    } else {\n      sortDataAscend(data, type);\n      // setActiveArrow(!activeArrow)\n      // console.log(activeArrow)\n    }\n  };\n\n  //console.log(data)\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <th className=\"thead\">Flag</th>\n          <th className=\"thead\">Country</th>\n          <th className=\"thead\">\n            Total\n            <TableSortLabel\n              onClick={() => handleClick(sortC, \"cases\")}\n              active={activeArrow}\n              direction={sortC}\n            />\n          </th>\n          <th className=\"thead\">\n            Recovered\n            <TableSortLabel\n              onClick={() => handleClick(sortR, \"recovered\")}\n              active={activeArrow}\n              direction={sortR}\n            />\n          </th>\n          <th className=\"thead\">\n            Deaths\n            <TableSortLabel\n              onClick={() => handleClick(sortD, \"deaths\")}\n              active={activeArrow}\n              direction={sortD}\n            />\n          </th>\n        </tr>\n        {data.slice(0, 10).map(({ countryInfo, country, cases, recovered, deaths }, index) => {\n          return (\n            <tr key={index}>\n              <td>\n                <img\n                  width=\"20px\"\n                  src={countryInfo.flag}\n                  alt={countryInfo.iso3}\n                />\n              </td>\n              <td>{ellipsify(country)}</td>\n              <td>\n                <strong>{numeral(cases).format(\"0a\")}</strong>\n              </td>\n              <td>\n                <strong>{numeral(recovered).format(\"0a\")}</strong>\n              </td>\n              <td>\n                <strong>{numeral(deaths).format(\"0a\")}</strong>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\n//we need to export line graph\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  legend: {\n    display: true,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          parser: \"MM/DD/YYYY\",\n          tooltipFormate: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          callbacks: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nfunction LineGraph({ casesType = \"cases\", selectedCountry, graphColor, countryName, ...props }) {\n  const [data, setData] = useState([]);\n\n  //to specify color of graph according to casetype\n  const colorsObj = {\n    blue: {\n      backgroundColor: \"rgb(8, 83, 140 , 0.4)\",\n      borderColor: \"rgb(8, 83, 140)\",\n    },\n    green: {\n      backgroundColor: \"rgba(50, 231, 50, 0.4)\",\n      borderColor: \"rgb(50, 231, 50)\",\n    },\n    red: {\n      backgroundColor: \"rgb(204, 16, 52,0.4)\",\n      borderColor: \"rgb(204, 16, 52)\",\n    },\n  };\n  //returns and array of objects containing x,y coordinates to generate a graph\n  const buildChartData = (data, casesType = \"cases\") => {\n    //here we create  a new array to store the data create by subtracting the previous date data\n    //next date data\n    //x and y represents the x axis and y axis;\n\n    let chartData = [];\n    //to compare the last data\n    let lastDataPoint;\n    //we will check if the data is of cases or recovered or deaths\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          //we get the new cases the next date\n          y: data[casesType][date] - lastDataPoint,\n        };\n        chartData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n  };\n\n  useEffect(() => {\n    const url =\n      selectedCountry === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/historical/all?lastdays=120\"\n        : `https://disease.sh/v3/covid-19/historical/${selectedCountry}?lastdays=120`;\n    //to fetch data on initial render\n    //https://disease.sh/v3/covid-19/historical/all?lastdays=30\n    const fetchData = async () => {\n      await fetch(url)\n        .then((response) => {\n          if (response.status === 404) {\n            console.log(\"Error\");\n            document.querySelector(\".noData\").textContent = \"No Data Available\";\n            throw new Error(`Error: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then((data) => {\n          document.querySelector(\".noData\").textContent = `${data.country} ${casesType} Timeline`;\n          //here we pass in the data and the term to extract specific data from the data obj\n          if (document.querySelector(\".noData\").textContent === \"No Data Available\") {\n            document.querySelector(\".noData\").textContent = `${data.country} ${casesType} Timeline`;\n          }\n          if (selectedCountry === \"worldwide\") {\n            countryName(\"Worldwide\");\n            let chartData = buildChartData(data, casesType);\n            setData(chartData);\n            document.querySelector(\".noData\").textContent = `Worldwide ${casesType} Timeline`;\n            //console.log(data)\n            // console.log(chartData);\n          } else {\n            if (data.timeline) {\n              countryName(data.country);\n              let chartData = buildChartData(data.timeline, casesType);\n              setData(chartData);\n              //console.log(data)\n              //console.log(chartData);\n            }\n          }\n        })\n        .catch((err) => {\n          console.log(\"SOMETHING WENT WRONG WITH FETCH!\");\n          console.log(err);\n        });\n    };\n    fetchData();\n  }, [casesType, selectedCountry, countryName]);\n\n  return (\n    <div\n      className={props.className}\n      style={{ margin: \"10px 0px\" }}\n    >\n      {data && data.length > 0 ? (\n        <Line\n          options={options}\n          data={{\n            datasets: [\n              {\n                backgroundColor: colorsObj[graphColor][`backgroundColor`],\n                borderColor: colorsObj[graphColor][`borderColor`],\n                data: data,\n                label: `${casesType}`.toLocaleUpperCase(),\n              },\n            ],\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","import React, { useEffect } from \"react\";\nimport $ from \"jquery\";\nimport \"../css/Progress.scss\";\nexport default function Progress({ text, total, type, ...props }) {\n  const calPercentage = (totalNum, typeNum) => {\n    //console.log(totalNum,typeNum)\n    return Math.ceil((typeNum / totalNum) * 100);\n  };\n\n  var $progress = $(`.progress.${text}`),\n    $bar = $(`.progress__bar.${text}`),\n    $text = $(`.progress__text.${text}`),\n    percent = 0,\n    speed = 1000,\n    start = 0,\n    orange = 15,\n    yellow = 35,\n    green = 55,\n    timer;\n\n  //console.log($progress,$bar,$text)\n\n  const update = (stopper, id) => {\n    setTimeout(function () {\n      // console.log(stopper,percent,id)\n      if (stopper === percent) {\n        //console.log('cleared')\n        clearTimeout(id);\n      } else {\n        percent = percent + 1;\n\n        $text.find(\"em\").text(percent + \"%\");\n\n        if (text === \"Active\") {\n          if (percent >= green) {\n            $bar.addClass(\"progress__bar--green\");\n          } else if (percent >= yellow) {\n            $bar.addClass(\"progress__bar--yellow\");\n          } else if (percent >= orange) {\n            $bar.addClass(\"progress__bar--orange\");\n          }\n\n          $bar.css({ width: percent + \"%\" });\n          speed = 100;\n          update(stopper, id);\n        }\n\n        if (text === \"Recovery\") {\n          if (percent >= green) {\n            $bar.addClass(\"progress__bar--green\");\n          } else if (percent >= yellow) {\n            $bar.addClass(\"progress__bar--yellow\");\n          } else if (percent >= orange) {\n            $bar.addClass(\"progress__bar--orange\");\n          }\n\n          $bar.css({ width: percent + \"%\" });\n          speed = 100;\n          update(stopper, id);\n        }\n\n        if (text === \"Death\") {\n          if (percent >= green) {\n            $bar.addClass(\"progress__bar--green\");\n          } else if (percent >= yellow) {\n            $bar.addClass(\"progress__bar--yellow\");\n          } else if (percent >= orange) {\n            $bar.addClass(\"progress__bar--orange\");\n          }\n\n          $bar.css({ width: percent + \"%\" });\n          speed = 100;\n          update(stopper, id);\n        }\n      }\n    }, speed);\n  };\n\n  //console.log(text,total,type)\n  useEffect(() => {\n    if (total && type) {\n      let stopper = parseInt(calPercentage(total, type));\n      //console.log(stopper)\n\n      let id = setTimeout(function () {\n        $progress.addClass(\"progress--active\");\n        //console.log('called update')\n        update(stopper, id);\n      }, 1000);\n    }\n    //console.log(timer_start)\n    return () => {\n      if (total && type) {\n        $text.find(\"em\").text(0 + \"%\");\n        $bar.css({ width: 0 + \"%\" });\n        $progress.removeClass(\"progress--active\");\n        $bar.removeClass(\"progress__bar--green progress__bar--yellow progress__bar--orange\");\n      }\n    };\n  }, [type, total]);\n\n  return (\n    <div>\n      <div className={`progress ${text}`}>\n        <b className={`progress__bar ${text}`}>\n          <span className={`progress__text ${text}`}>\n            {text}: <em>0%</em>\n          </span>\n        </b>\n      </div>\n    </div>\n  );\n}\n","import numeral from \"numeral\";\n\n//sort data in descending order\nexport const sortData = (data) => {\n  const sortedData = [...data];\n\n  //sortedData.sort((a,b)=> a.cases>b.cases?-1:1)\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\n\nexport const prettyPrintStat = (stat) => (stat ? `+${numeral(stat).format(\"0 a\")}` : `+0`);\n","import React, { useState, useEffect } from \"react\";\nimport InfoBox from \"./Dashboard/InfoBox\";\nimport CreateMap from \"./Dashboard/Map\";\nimport Table from \"./Dashboard/Table\";\nimport LineGraph from \"./Dashboard/LineGraph\";\nimport Progress from \"./Progress\";\n\nimport { sortData, prettyPrintStat } from \"../utils/util\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\n\nimport { FormControl, Card, CardContent, FormHelperText } from \"@material-ui/core\";\n\nimport \"../css/App.css\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    textAlign: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    display: \"flex\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction Dashboard() {\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countryName, setCountryName] = useState(\"Worldwide\");\n\n  const [tableData, setTableData] = useState([]);\n  // we pass in the center of the world\n  const [mapCenter, setMapCenter] = useState({ lat: 21.14, lng: 79.088 });\n  const [mapZoom, setMapZoom] = useState(2.6);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [graphColor, setGraphColor] = useState(\"blue\");\n\n  const colors = [\"blue\", \"green\", \"red\"];\n\n  const changeCname = (name) => {\n    setCountryName(name);\n  };\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    // console.log('useEffect called')\n    //get worldwide data\n    const getWorldwideData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/all\")\n        .then((response) => response.json())\n        .then((data) => {\n          //console.log(data)\n          setCountryInfo(data);\n        });\n    };\n\n    //get data for all countries for table and dropdown\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          //console.log(data)\n          const countriesName = data.map((country, index) => {\n            //here we return an  object and push it into countries array with map\n            //console.log(country.countryInfo._id)\n            return {\n              name: country.country, //United States,United Kingdom\n              value: country.countryInfo.iso2, //Uk,USA, FR\n              id: index, //0,1,2\n            };\n          });\n          //here we pass in the sorteddata to tableData state\n          setTableData(sortData(data));\n          //to gather all countries data for map\n          setMapCountries(data);\n          //to make our dropdown selectable and get value attribute when selected\n          setCountries(countriesName);\n        });\n    };\n    getWorldwideData();\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    // setCountryName(e.target.value);\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setSelectedCountry(countryCode);\n        setCountryInfo(data);\n        // console.log(selectedCountry)\n        if (data && countryCode !== \"worldwide\") {\n          setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n          setMapZoom(4.3);\n        } else {\n          setMapCenter([21.14, 79.088]);\n          setMapZoom(5.3);\n        }\n      });\n  };\n\n  return (\n    <div>\n      {/* container */}\n      <div className=\"app\">\n        {/* left part */}\n        <div className=\"app_left\">\n          {/* Header */}\n          <div className=\"app_heading\"> </div>\n\n          <Card className=\"item\">\n            <h1 style={{ textAlign: \"center\", color: \"white\" }}>\n              Covid-19 <b>Dashboard</b>\n            </h1>\n            <CardContent>\n              <div>\n                <FormControl className={classes.formControl}>\n                  {/* <InputLabel style={{textAlign:'center' ,alignItems:'center'}} htmlFor=\"uncontrolled-native\">Name</InputLabel> */}\n                  <NativeSelect\n                    name={selectedCountry}\n                    className=\"dropdown1\"\n                    value={selectedCountry}\n                    // value={selectedCountry}\n                    onChange={onCountryChange}\n                    inputProps={{\n                      name: \"name\",\n                      id: \"uncontrolled-native\",\n                    }}\n                  >\n                    <option\n                      value=\"worldwide\"\n                      name=\"worldwide\"\n                    >\n                      Worldwide\n                    </option>\n                    {countries.map((country) => {\n                      return (\n                        <option\n                          key={country.id}\n                          value={country.value}\n                        >\n                          {country.name}\n                        </option>\n                      );\n                    })}\n                  </NativeSelect>\n                  <FormHelperText style={{ color: \"white\" }}>Select Country</FormHelperText>\n                </FormControl>\n              </div>\n\n              <h3 className=\"app_graphTitle\">Overview of {countryName}</h3>\n\n              <div className=\"app_stats\">\n                <InfoBox\n                  color={colors[0]}\n                  onClick={() => {\n                    setCasesType(\"cases\");\n                    setGraphColor(\"blue\");\n                  }}\n                  title=\"Confirmed\"\n                  cases={prettyPrintStat(countryInfo.todayCases)}\n                  total={countryInfo.cases}\n                  active={casesType === \"cases\"}\n                ></InfoBox>\n                {/* Info Boxes title=\"coronavirus active cases*/}\n                <InfoBox\n                  color={colors[1]}\n                  title=\"Recovered\"\n                  active={casesType === \"recovered\"}\n                  onClick={() => {\n                    setCasesType(\"recovered\");\n                    setGraphColor(\"green\");\n                  }}\n                  cases={prettyPrintStat(countryInfo.todayRecovered)}\n                  total={countryInfo.recovered}\n                ></InfoBox>\n                {/* Info Boxes title=\"coronavirus recoverd */}\n                <InfoBox\n                  color={colors[2]}\n                  title=\"Deaths\"\n                  active={casesType === \"deaths\"}\n                  onClick={() => {\n                    setCasesType(\"deaths\");\n                    setGraphColor(\"red\");\n                  }}\n                  cases={prettyPrintStat(countryInfo.todayDeaths)}\n                  total={countryInfo.deaths}\n                ></InfoBox>\n                {/* Info Boxes title=\"coronavirus deaths*/}\n              </div>\n\n              <div className=\"progressSection\">\n                <h3 className=\"app_graphTitle\">Stats of {countryName}</h3>\n                <Progress\n                  text=\"Active\"\n                  type={countryInfo.active}\n                  total={countryInfo.cases}\n                ></Progress>\n                <Progress\n                  text=\"Recovery\"\n                  type={countryInfo.recovered}\n                  total={countryInfo.cases}\n                ></Progress>\n                <Progress\n                  text=\"Death\"\n                  type={countryInfo.deaths}\n                  total={countryInfo.cases}\n                ></Progress>\n              </div>\n            </CardContent>\n          </Card>\n          {/* Map */}\n          <Card className=\"item\">\n            <CardContent>\n              <h3 className=\"app_graphTitle\">Covid-19 Impact in {countryName}</h3>\n              <CreateMap\n                casesType={casesType}\n                center={mapCenter}\n                zoom={mapZoom}\n                countries={mapCountries}\n              />\n            </CardContent>\n          </Card>\n        </div>\n        {/* right part */}\n        <div className=\"app_right\">\n          <Card className=\"item\">\n            <CardContent>\n              {/* Graph */}\n              <h3 className=\"app_graphTitle noData\">\n                {countryName} {casesType} Timeline{\" \"}\n              </h3>\n              <LineGraph\n                className=\"app_graph\"\n                casesType={casesType}\n                graphColor={graphColor}\n                selectedCountry={selectedCountry}\n                countryName={changeCname}\n              />\n            </CardContent>\n          </Card>\n          <Card className=\"item app_table\">\n            <CardContent>\n              <h3 className=\"app_graphTitle\">Top Total Cases by Country</h3>\n              {/* Table */}\n              <Table countries={tableData} />\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport \"./News.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: \"transparent\",\n    margin: 40,\n  },\n\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\",\n  },\n  search: {\n    position: \"relative\",\n\n    color: \"white\",\n    backgroundColor: \"#2196f3\",\n    marginLeft: 0,\n    margin: \"0px 0px 30px 0px\",\n    paddingBottom: 8,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"22ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\nexport default function News() {\n  const [data, setData] = useState([]);\n  const [term, setTerm] = useState(\"coronavirus\");\n  const [debouncedTerm, setDebouncedTerm] = useState(term);\n  const [spinner, setSpinner] = useState(true);\n  const [heading, setHeading] = useState(\"coronavirus\");\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedTerm(term);\n    }, 700);\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [term]);\n  useEffect(() => {\n    const fetchNews = async () => {\n      await fetch(` https://gnews.io/api/v3/search?q=${debouncedTerm}&token=267280a167badea462bdd528fe6cb2a5`)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n\n          const newsData = data.articles.map(({ description, publishedAt, source, title, url, image }) => {\n            return {\n              title: title,\n              description: description,\n              name: source.name,\n              date: publishedAt,\n              img: image,\n              url: url,\n            };\n          });\n          setData(newsData);\n          setTimeout(() => setSpinner(false), 1000);\n        })\n        .catch(function () {\n          console.log(\"Error : Limit Reached Only 100 each day.\");\n        });\n    };\n    if (debouncedTerm) {\n      fetchNews();\n    }\n  }, [debouncedTerm]);\n\n  const handleOnChange = (e) => {\n    setTerm(e.target.value);\n    setHeading(e.target.value);\n  };\n\n  if (spinner) {\n    return (\n      <div className=\"divLoader\">\n        <svg\n          className=\"svgLoader\"\n          viewBox=\"0 0 100 100\"\n          width=\"10em\"\n          height=\"10em\"\n        >\n          <path\n            ng-attr-d=\"{{config.pathCmd}}\"\n            ng-attr-fill=\"{{config.color}}\"\n            stroke=\"none\"\n            d=\"M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50\"\n            fill=\"rgb(31, 79, 235)\"\n            transform=\"rotate(179.719 50 51)\"\n          >\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              calcMode=\"linear\"\n              values=\"0 50 51;360 50 51\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"0s\"\n              repeatCount=\"indefinite\"\n            ></animateTransform>\n          </path>\n        </svg>\n      </div>\n    );\n  } else {\n    return (\n      <div className={classes.root}>\n        <Grid\n          item\n          xs={12}\n          cols={4}\n          style={{ marginBottom: \"50px\" }}\n        >\n          <h1 style={{ textAlign: \"center\", color: \"white\" }}>\n            Search <b>{heading}</b>\n          </h1>\n\n          <div>\n            <h6 className=\"header\">\n              <InfoIcon></InfoIcon>type and wait for 2 second\n            </h6>\n          </div>\n        </Grid>\n        <GridList\n          cellHeight={210}\n          cols={4}\n        >\n          <GridListTile\n            key=\"Subheader\"\n            cols={4}\n            style={{ height: \"auto\", textAlign: \"center\" }}\n          >\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                value={term}\n                onChange={(e) => handleOnChange(e)}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </div>\n          </GridListTile>\n\n          {data && data.length > 0\n            ? data.map((d, index) => (\n                <GridListTile\n                  key={index}\n                  cols={2}\n                  style={{ fontSize: \"0.2rem\" }}\n                >\n                  <img\n                    src={d.img ? d.img : \"./nothumb.png\"}\n                    alt={d.title}\n                  />\n\n                  {/* <img src={d.img} alt={d.title} /> */}\n\n                  <GridListTileBar\n                    classes={classes.tileBar}\n                    title={d.title}\n                    subtitle={<span>by: {d.name}</span>}\n                    actionIcon={\n                      <IconButton\n                        onClick={() => window.open(`${d.url}`, \"_blank\")}\n                        aria-label={`info about ${d.title}`}\n                        className={classes.icon}\n                      >\n                        <InfoIcon></InfoIcon>\n                      </IconButton>\n                    }\n                  />\n                </GridListTile>\n              ))\n            : null}\n        </GridList>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { withStyles, useTheme, makeStyles } from \"@material-ui/core/styles\";\nimport MuiAccordion from \"@material-ui/core/Accordion\";\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport MuiAccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport \"./Precautions.css\";\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst tutorialSteps = [\n  {\n    label: \"Novel Corona Virus (n-COVID-19) attacks in the earth.\",\n    imgPath: \"https://i.pinimg.com/564x/25/92/b7/2592b771d751943bebec0ee58d32f5d3.jpg\",\n  },\n  {\n    label: \"Coronavirus: Tracking Coronavirus\",\n    imgPath: \"https://i.pinimg.com/564x/cb/af/e1/cbafe1a3d42356a64d97a7a76f73de43.jpg\",\n  },\n  {\n    label: \"Do's & Don'ts When Wearing a Face Mask\",\n    imgPath: \"https://i.pinimg.com/564x/e4/cd/5b/e4cd5b3bb6b4f2cae2d89ef0cfafb8b1.jpg\",\n  },\n  {\n    label: \"PREVENT YOURSELF FROM COVID-19\",\n    imgPath: \"https://i.pinimg.com/564x/8d/c7/8c/8dc78c7941d54d2f66e75895834cdefb.jpg\",\n  },\n  {\n    label: \"Steps to proper hand hygiene\",\n    imgPath: \"https://i.pinimg.com/564x/ef/3e/d3/ef3ed32ecb2954281ce3bbdbf0556feb.jpg\",\n  },\n];\n\nconst Accordion = withStyles({\n  root: {\n    border: \"1px solid rgba(0, 0, 0, .125)\",\n\n    boxShadow: \"none\",\n    \"&:not(:last-child)\": {\n      borderBottom: 0,\n    },\n    \"&:before\": {\n      display: \"none\",\n    },\n    \"&$expanded\": {\n      margin: \"auto\",\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n  root: {\n    backgroundColor: \"rgba(0, 0, 0, .03)\",\n    borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\n    marginBottom: -1,\n    minHeight: 56,\n    \"&$expanded\": {\n      minHeight: 56,\n    },\n  },\n  content: {\n    \"&$expanded\": {\n      margin: \"12px 0\",\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiAccordionDetails);\n\nexport default function Precautions() {\n  const [expanded, setExpanded] = React.useState(\"panel1\");\n\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const maxSteps = tutorialSteps.length;\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 600,\n      flexGrow: 1,\n      margin: 30,\n    },\n    header: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: 50,\n\n      paddingLeft: theme.spacing(4),\n      backgroundColor: theme.palette.background.default,\n    },\n    img: {\n      height: 495,\n      display: \"block\",\n\n      overflow: \"hidden\",\n      width: \"100%\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  return (\n    <div>\n      <React.Fragment>\n        <Container\n          maxWidth=\"md\"\n          style={{ backgroundColor: \"rgba(0, 0, 0, .03)\" }}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"space-evenly\"\n            alignItems=\"center\"\n            style={{ margin: \"20px 0px\" }}\n          >\n            <div style={{ margin: \"15px 0px\" }}>\n              <Paper\n                square\n                elevation={0}\n                className={classes.header}\n              >\n                <Typography>{tutorialSteps[activeStep].label}</Typography>\n              </Paper>\n              <AutoPlaySwipeableViews\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n                index={activeStep}\n                onChangeIndex={handleStepChange}\n                enableMouseEvents\n              >\n                {tutorialSteps.map((step, index) => (\n                  <div key={step.label}>\n                    {Math.abs(activeStep - index) <= 2 ? (\n                      <img\n                        className={classes.img}\n                        src={step.imgPath}\n                        alt={step.label}\n                      />\n                    ) : null}\n                  </div>\n                ))}\n              </AutoPlaySwipeableViews>\n              <MobileStepper\n                steps={maxSteps}\n                position=\"static\"\n                variant=\"text\"\n                activeStep={activeStep}\n                nextButton={\n                  <Button\n                    size=\"small\"\n                    onClick={handleNext}\n                    disabled={activeStep === maxSteps - 1}\n                  >\n                    Next\n                    {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                  </Button>\n                }\n                backButton={\n                  <Button\n                    size=\"small\"\n                    onClick={handleBack}\n                    disabled={activeStep === 0}\n                  >\n                    {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                    Back\n                  </Button>\n                }\n              />\n            </div>\n\n            <div style={{ margin: \"15px 0px\" }}>\n              <Typography\n                variant=\"h5\"\n                gutterBottom\n                style={{ backgroundColor: \"white\", padding: 10 }}\n              >\n                Frequently Asked Questions\n              </Typography>\n              <Accordion\n                square\n                expanded={expanded === \"panel1\"}\n                onChange={handleChange(\"panel1\")}\n              >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1d-content\"\n                  id=\"panel1d-header\"\n                >\n                  <Typography>What should I do if I have had close contact with someone who has COVID-19?</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>\n                    Be alert for symptoms. Watch for fever, cough, shortness of breath, or other symptoms of COVID-19.\n                    Take your temperature and follow CDC guidance if you have symptoms.\n                  </Typography>\n                </AccordionDetails>\n              </Accordion>\n              <Accordion\n                square\n                expanded={expanded === \"panel2\"}\n                onChange={handleChange(\"panel2\")}\n              >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel2d-content\"\n                  id=\"panel2d-header\"\n                >\n                  <Typography>How does the virus spread?</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>\n                    The virus that causes COVID-19 is thought to spread mainly from person to person, mainly through\n                    respiratory droplets produced when an infected person coughs, sneezes, or talks. These droplets can\n                    land in the mouths or noses of people who are nearby or possibly be inhaled into the lungs. Spread\n                    is more likely when people are in close contact with one another (within about 6 feet). COVID-19\n                    seems to be spreading easily and sustainably in the community (“community spread”) in many affected\n                    geographic areas. Community spread means people have been infected with the virus in an area,\n                    including some who are not sure how or where they became infected.\n                  </Typography>\n                </AccordionDetails>\n              </Accordion>\n              <Accordion\n                square\n                expanded={expanded === \"panel3\"}\n                onChange={handleChange(\"panel3\")}\n              >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel3d-content\"\n                  id=\"panel3d-header\"\n                >\n                  <Typography>When should I seek emergency care if I have COVID-19?</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>\n                    Look for emergency warning signs* for COVID-19. If someone is showing any of these signs, seek\n                    emergency medical care immediately Trouble breathing Persistent pain or pressure in the chest New\n                    confusion Inability to wake or stay awake Bluish lips or face *This list is not all possible\n                    symptoms. Please call your medical provider for any other symptoms that are severe or concerning to\n                    you. Call 911 or call ahead to your local emergency facility: Notify the operator that you are\n                    seeking care for someone who has or may have COVID-19.\n                  </Typography>\n                </AccordionDetails>\n              </Accordion>\n              <Accordion\n                square\n                expanded={expanded === \"panel4\"}\n                onChange={handleChange(\"panel4\")}\n              >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel4d-content\"\n                  id=\"panel4d-header\"\n                >\n                  <Typography>What is community spread?</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>\n                    Community spread means people have been infected with the virus in an area, including some who are\n                    not sure how or where they became infected. Each health department determines community spread\n                    differently based on local conditions. For information on community spread in your area, please\n                    visit your health department's website.​\n                  </Typography>\n                </AccordionDetails>\n              </Accordion>\n            </div>\n          </Grid>\n        </Container>\n      </React.Fragment>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: 10,\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n}));\n\nexport default function Contact() {\n  const classes = useStyles();\n  //   direction=\"column\"\n  //   justify=\"space-around\"\n  //   alignItems=\"center\"\n  return (\n    <div>\n      <Grid\n        container\n        spacing={3}\n        style={{ marginBottom: \"150px\", height: \"100%\" }}\n      >\n        <Grid\n          item\n          xs={6}\n          sm={3}\n        >\n          <Tooltip title=\"click to visit\">\n            <Card\n              className={classes.root}\n              onClick={() => window.open(`https://www.mohfw.gov.in/`, \"_blank\")}\n            >\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"./mohfw.png\"\n                  title=\"Mohfw India\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                  >\n                    MOHFW - India\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    Government of India updates on COVID-19 Helpline Number :+91-11-23978046 , Toll Free : 1075 ,\n                    Helpline Email ID : ncov2019@gov.in\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Tooltip>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          sm={3}\n        >\n          <Tooltip title=\"click to visit\">\n            <Card\n              className={classes.root}\n              onClick={() => window.open(`https://www.who.int/health-topics/coronavirus#tab=tab_1`, \"_blank\")}\n            >\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"./who.png\"\n                  title=\"who\"\n                />\n\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                  >\n                    WHO\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    WHO Portal for Coronavirus. Join WhatsApp- Send \"hi\" to +41 79 893 18 92 on WhatsApp\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Tooltip>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          sm={3}\n        >\n          <Tooltip title=\"click to visit\">\n            <Card\n              className={classes.root}\n              onClick={() => window.open(`https://www.worldometers.info/coronavirus/`, \"_blank\")}\n            >\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"worldometers.jpg\"\n                  title=\"worldometer\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                  >\n                    Worldometers Info\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    Find COVID-19 global corona virus cases count in different countries in real time and other\n                    important information here\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Tooltip>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          sm={3}\n        >\n          <Tooltip title=\"click to visit\">\n            <Card\n              className={classes.root}\n              onClick={() => window.open(`https://www.cdc.gov/coronavirus/2019-nCoV/index.html`, \"_blank\")}\n            >\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"CDC.png\"\n                  title=\"America\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                  >\n                    CDC\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    Centers for Disease Control and Prevention provides informative updates on COVID-19\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Tooltip>\n        </Grid>\n\n        <Grid\n          item\n          xs={6}\n          sm={3}\n        >\n          <Tooltip title=\"click to visit\">\n            <Card\n              className={classes.root}\n              onClick={() =>\n                window.open(\n                  ` https://www.gov.uk/government/organisations/department-of-health-and-social-care`,\n                  \"_blank\"\n                )\n              }\n            >\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"govuk.png\"\n                  title=\"UK\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                  >\n                    United Kingdom\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    Read the latest information about the coronavirus situation in the UK\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Tooltip>\n        </Grid>\n\n        <Grid\n          item\n          xs={6}\n          sm={3}\n        >\n          <Tooltip title=\"click to visit\">\n            <Card\n              className={classes.root}\n              onClick={() =>\n                window.open(\n                  `https://coronavirus.jhu.edu/?utm_campaign=jh20&utm_content=ow_hubinfo&utm_medium=dig_link&utm_source=jhu_properties`,\n                  \"_blank\"\n                )\n              }\n            >\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"johns.jpg\"\n                  title=\"John Hopkins\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                  >\n                    Johns Hopkins\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    Johns Hopkins 's website is a resource to help advance the understanding of the virus, inform the\n                    public, and brief policymakers in order to guide a response, improve care, and save lives.\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Tooltip>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          sm={3}\n        >\n          <Tooltip title=\"click to visit\">\n            <Card\n              className={classes.root}\n              onClick={() => window.open(`http://www.ijcrt.org/papers/IJCRT2006293.pdf`, \"_blank\")}\n            >\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"ijcrt.jpg\"\n                  title=\"Research Paper on Coronavirus\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                  >\n                    Research Paper\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    Publication : FIGHTING CORONAVIRUS THROUGH AI, DATA SCIENCE AND TECHNOLOGY . This published paper\n                    discusses a lot about How can technology help us recognize the path of virus spread, How Artificial\n                    Intelligence is helping fight Coronavirus, How Big Data is playing a vital role in minimizing\n                    coronavirus outbreak and many more.\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Dashboard from \"./components/Dashboard\";\nimport News from \"./components/News/News\";\nimport Precautions from \"./components/Precautions/Precautions\";\nimport Contact from \"./components/Contact/Contact\";\n\nconst PUBLIC_URL = process.env.REACT_APP_PUBLIC_URL;\n\nexport const BASENAME = new URL(PUBLIC_URL).pathname;\n\nfunction App() {\n  return (\n    <BrowserRouter basename={BASENAME}>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route\n            exact\n            path=\"/dashboard\"\n            component={Dashboard}\n          />\n          <Route\n            exact\n            path=\"/\"\n          >\n            <Redirect to=\"/dashboard\" />\n          </Route>\n          <Route\n            exact\n            path=\"/news\"\n            component={News}\n          />\n          <Route\n            exact\n            path=\"/precautions\"\n            component={Precautions}\n          />\n          <Route\n            exact\n            path=\"/usefulLinks\"\n            component={Contact}\n          />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}